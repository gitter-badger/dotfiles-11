"run current perl program
set autowrite
map <F5> :! perl ./%<CR>
map <F4> :! perldoc ./%<cr>

" show ruler always
set ruler

" always show status bar
set ls=2
" use visual bell instead of beeping
set vb

filetype plugin on

" syntax highlighting
set t_Co=256
syntax enable
set background=dark "or light
colorscheme solarized
"colorscheme murphy

" 4 space tabs
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab

" show matching brackets
set showmatch

" show line numbers
set number

" command height taller
set cmdheight=2

" set history length
set history=1000

" set autoread when file is altered externally
set autoread

" hilight search results
set hlsearch

" ignore case when searching
set ignorecase
set smartcase

" off swapfile bullshit
set noswapfile

" be good about indention
set ai
set si

" smart window moving
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l " Remap VIM 0 to first non-blank character map 0 ^ " This shows what you are typing as a command.  I love this!  set showcmd

" Cool tab completion stuff
set wildmenu
set wildmode=list:longest,full

" This is totally awesome - remap jj to escape in insert mode.  You'll never
" type jj anyway, so it's great!
" later, added kk
inoremap jj <Esc>
inoremap kk <Esc>

" Incremental searching is sexy
set incsearch

" Next Tab
nnoremap <silent> <C-n> :tabnext<CR>

" Previous Tab
nnoremap <silent> <C-p> :tabprevious<CR>

" New Tab
nnoremap <silent> <C-t> :tabnew<CR>

" save on 2 esc's
map <Esc><Esc> :w<CR>

" make ctrl z not send the kill command
map <C-z> u

" make ctrl c join lines
map <C-c> :join<CR>

" resize window CTRL+(H|J|K|L)
nmap K :resize +1<CR>
nmap J :resize -1<CR>
nmap H :vertical resize -1<CR>
nmap L :vertical resize +1<CR>

" keep more context when scrolling off the end of a buffer
set scrolloff=5

augroup vimrc_autocmds
        autocmd BufEnter * highlight OverLength cterm=underline
    autocmd BufEnter * match OverLength /\%82v.*/
augroup END

set wildmenu
set wildmode=list:longest,full

vmap 1j 10j
vmap 1k 10k
vmap 1h 10h
vmap 1l 10l

nmap 1j 10j
nmap 1k 10k
nmap 1h 10h
nmap 1l 10l

"timeout on inserts.. may cause issues TODO
:set timeout timeoutlen=1000 ttimeoutlen=100

augroup vimrcEx
" Clear all autocmds in the group
autocmd!
" Jump to last cursor position unless it's invalid or in an event handler
autocmd BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\ exe "normal g`\"" |
\ endif

" Leave the return key alone when in command line windows, since it's used
to run commands there.
autocmd! CmdwinEnter * :unmap <cr>
autocmd! CmdwinLeave * :call MapCR()

augroup END

" Insert a hash rocket with <c-l>
imap <c-l> <space>=><space>

"leader setting
let mapleader=","

" allow unsaved background buffers
set hidden

" Clear the search buffer when hitting return
function! MapCR()
nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

" set autoread when file is altered externally
set autoread

" hilight search results
set hlsearch
highlight Search cterm=underline

" hilight current line
set cursorline

" if you try to open an already opened buffer.. move to instead of opening a
" second
set switchbuf=useopen

"always show tabs at top
set showtabline=2

set shell=bash

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MULTIPURPOSE TAB KEY
" Indent if we're at the beginning of a line. Else, do completion.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! InsertTabWrapper()
let col = col('.') - 1
if !col || getline('.')[col - 1] !~ '\k'
return "\<tab>"
else
return "\<c-p>"
endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" OPEN FILES IN DIRECTORY OF CURRENT FILE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
let old_name = expand('%')
let new_name = input('New file name: ', expand('%'), 'file')
if new_name != '' && new_name != old_name
exec ':saveas ' . new_name
exec ':silent !rm ' . old_name
redraw!
endif
endfunction
map <leader>n :call RenameFile()<cr>

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Display extra whitespace
"set list listchars=tab:>>,trail:^

" window resizing
set winheight=30
set winminheight=5

:nnoremap Q <Nop>
